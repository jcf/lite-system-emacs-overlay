#+title: Lite System + Emacs Overlay

* Contents                                                              :TOC:
- [[#home-modules][Home modules]]
  - [[#without-a-custom-home-manager-module][Without a custom Home Manager module]]
  - [[#with-a-custom-home-manager-module][With a custom Home Manager module]]
- [[#emacs-overlay][Emacs overlay]]

* Home modules
https://github.com/yelite/lite-system/issues/3

** Without a custom Home Manager module
#+begin_src sh
nix run nix-darwin -- --flake "$PWD" build
#+end_src

The system =zsh= module adds ZSH to file:./result, but the home =git= module
does not.

#+begin_src sh :dir result :exports both
fd --type executable --follow '^(git|zsh)'
#+end_src

#+results:
: sw/bin/zsh

** With a custom Home Manager module
#+begin_src sh
nix run nix-darwin -- --flake "$PWD" build
#+end_src

#+begin_example
[...]
       … while calling anonymous lambda

         at /nix/store/nn17kpb3mlp3kdhi4vm1m71w0m68f1gk-source/lib/modules.nix:242:72:

          241|           # For definitions that have an associated option
          242|           declaredConfig = mapAttrsRecursiveCond (v: ! isOption v) (_: v: v.value) options;
             |                                                                        ^
          243|

       … while evaluating the option `my.home':

       … from call site

         at /nix/store/nn17kpb3mlp3kdhi4vm1m71w0m68f1gk-source/lib/modules.nix:844:59:

          843|       if isDefined then
          844|         if all (def: type.check def.value) defsFinal then type.merge loc defsFinal
             |                                                           ^
          845|         else let allInvalid = filter (def: ! type.check def.value) defsFinal;

       … while calling 'merge'

         at /nix/store/nn17kpb3mlp3kdhi4vm1m71w0m68f1gk-source/lib/types.nix:762:22:

          761|         check = x: isAttrs x || isFunction x || path.check x;
          762|         merge = loc: defs:
             |                      ^
          763|           (base.extendModules {

       error: The option `my.home.git' does not exist. Definition values:
       - In `/nix/store/7smjyy7jhci42acqczbm89dkmrm5g5fc-host/max':
           {
             enable = true;
           }

       However there are no options defined in `my.home'. Are you sure you've
       declared your options properly? This can happen if you e.g. declared your options in `types.submodule'
       under `config' rather than `options'.
#+end_example

* Emacs overlay
https://github.com/yelite/lite-system/issues/2

#+begin_src sh
nix run nix-darwin -- --flake "$PWD" build
#+end_src

#+begin_example
building the system configuration...
error:
       … while evaluating the attribute 'optionalValue.value'

         at /nix/store/cjvwy2rr87ir1nb6wvs9n6lvbnzlqrdg-source/lib/modules.nix:854:5:

          853|
          854|     optionalValue =
             |     ^
          855|       if isDefined then { value = mergedValue; }

       … while evaluating a branch condition

         at /nix/store/cjvwy2rr87ir1nb6wvs9n6lvbnzlqrdg-source/lib/modules.nix:855:7:

          854|     optionalValue =
          855|       if isDefined then { value = mergedValue; }
             |       ^
          856|       else {};

       (stack trace truncated; use '--show-trace' to show the full trace)

       error: value is null while a set was expected
#+end_example
